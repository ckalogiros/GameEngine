

    /**
     * ## PRIVATE_BUFFERS
     * 
     * The application may need some drawables to be stored in private vertex buffers.
     * That means the drawables must explicitly be stored in the vertex buffer by the user,
     * and automatic selection to add to a private buffer, by 'GlGenerateContext()', is prohibited.
     * The core reason of private buffers is to have control over the vertexBuffer rendering (Render: On/Off).
     * By setting the vb to be private, the only way to add to that buffer is by 
     * passing "FLAGS = GL_VB.SPECIFIC, vertexBufferIdx = 'the private buffer index'" 
     * upon drawable's 'AddToGraphicsBuffer()' function.
     */

    /**
     * ## Gfx_Pool.session
     * 
     * A way of storing all activity of the gfx pool manipulation for a given period of executing code.
     * At the end of the session (SessionEnd()), we can make changes to all the changes in that session.
     * 
     * For example, we may need to allocate private buffers for an options menu. We cannot pass 
     * 'flag=get inactive buffers' and set the current buffers to be active.
     * we want is to delay the activation until all meshes of that options menu have been resolved,
     * in order to use the same buffers for matching meshes for that menu.
     * 
     */