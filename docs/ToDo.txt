!!
Static draw meshes should be rendered to a render buffer once
and render buffer should been drawn every frame without 
redrawing the meshes to it's self
!!


--------------------------------------------------- REMOVE!
--------------------------------------------------- REMOVE!

--------------------------------------------------- ALGORITHMS!
--------------------------------------------------- ALGORITHMS!

--------------------------------------------------- TESTING!
. Implement a smooth fps timer, by addding
  on each frame the new delta time but
  subtracting the 'oldest' one, with a constant counter.
  The 'oldest' value is up to dicision. For example
  we could set 100 samples, so the oldest will be the -100 delta. 
--------------------------------------------------- TESTING!

--------------------------------------------------- IMIDIATE!

. Implement set render queue priority for meshes inside a vertexBuffer.

. Definetly we need an implementation of removing vertices from the gfx buffers.
  . One way would be to keep track of all the free attributes of a vertex buffer
    and add to that free space when it sees fit. Also we need a kind of combining
    overlaping free space implementation

  . Implement destruction of gfx buffers and gl program.
    (Also make sure all suposed private buffers are set private).
--------------------------------------------------- IMIDIATE!

--------------------------------------------------- TODO

. Implement second popup menu(from the main popup menu)

. Maybe we should implement timeIntervals for the GlDraw function. 
. Or have static meshes in specific programs and buffers. 

. Implement:
    Widget Menu.
    Widget Drop-Down-Menu.

. Move touch screen input from MouseEvents.js to input folder

. Create a division of canvas, for colission detection, 
  place meshes in 2D(like UI) and many more.
. Implement RenderBuffers.
. Finish a good implementation for Animations.
. Event driven system and how it can offer efficiency and/or flexibility.
. Implement glBufferSubData.
. Implement the strategy for divide meshes into static draw and dynamic draw.

. - Index Buffers - 
  . Test draw specific meshes from creating another index buffer, 
    or if possible select indices from an index buffer.
  . Maybe create groups of indices stored in meshes, that
    will allow the re-rendering of certain groups of meshes,
    also maybe we implement an index-based solution to
    address vertices and its attributes instead of gfxInfo start????  

. - More Geometry -
  . Line
  . BezierCurve
  . Triangle2D
  . Triangle3D
  . etc
--------------------------------------------------- TODO

--------------------------------------------------- CONTINUE


--------------------------------------------------- CONTINUE



